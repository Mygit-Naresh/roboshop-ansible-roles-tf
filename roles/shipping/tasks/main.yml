- name: JAVA and MAVEN configuration
  ansible.builtin.package:
    name: maven
    state: present
- name:  application setup
  ansible.builtin.import_role:
    name: common
    tasks_from: app-setup.yml
- name: mvn package install
  ansible.builtin.import_role:
    name: common
    tasks_from: java-maven.yml
- name: rename
  ansible.builtin.shell: mv /app/target/{{component}}-{{shipping_version}}.jar shipping.jar
  args:
    chdir: /app
- name:  systemd
  ansible.builtin.import_role:
    name: common
    tasks_from: systemd.yml
- name: mysql client install
  ansible.builtin.package:
    name: mysql
    state: present
- name: check cities schema exists or not
  ansible.builtin.command:  mysql -h {{MYSQL_HOST}} -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
  register: schema

- name: print output
  ansible.builtin.debug:
    msg: "schema output: {{schema}}"

- name: load cities data
  ansible.builtin.shell: "mysql -h {{MYSQL_HOST}} -uroot -p{{mysql_password}}  < /app/schema/shipping.sql"
  when: schema.stdout != "1"
- name: connect to mysql and load data
  ansible.builtin.command: mysql -h {{MYSQL_HOST}}  -uroot  {{mysql_password}}   < /app/schema/{{component}}.sql
  when: schema.stdout != "1"   #-p{{ lookup('aws_ssm', '/roboshop/{{env}}/mysql_root_pass', region='us-east-1', decrypt=True) }}
- name: restart shipping
  ansible.builtin.import_role:
    name: common
    tasks_from: systemd.yml
# - name: importing deployment tasks with tags
#   ansible.builtin.import_role:
#      name: common
#      tasks_from: deployment